{"version":3,"file":"static/js/380.03efb8a9.chunk.js","mappings":"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","sources":["pages/Requests/Assigned/index.jsx","../node_modules/@mui/icons-material/CheckCircle.js"],"sourcesContent":["import {\n\tBox,\n\tChip,\n\tCircularProgress,\n\tPaper,\n\tTable,\n\tTableBody,\n\tTableCell,\n\tTableContainer,\n\tTableHead,\n\tTableRow,\n\tTypography,\n} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { useContext, useEffect, useState } from 'react';\nimport { assignedRequest } from '../../../constants/table-headers';\nimport { AuthContext } from '../../../context/AuthContext';\nimport { FetchContext } from '../../../context/FetchContext';\nimport CustomButton from '../../../components/common/CustomButton';\nimport { SnackbarError, SnackbarSuccess } from '../../../components/SnackBars';\n\nconst Assigned = () => {\n\tconst fetchContext = useContext(FetchContext);\n\tconst authContext = useContext(AuthContext);\n\tconst [records, setRecords] = useState([]);\n\tconst [success, setSuccess] = useState(false);\n\tconst [error, setError] = useState(false);\n\tconst [successMessage, setSuccessMessage] = useState();\n\tconst [errorMessage, setErrorMessage] = useState();\n\tconst [loading, setLoading] = useState(false);\n\n\tconst getAssignedRequests = async () => {\n\t\tfetchContext.authAxios\n\t\t\t.get(`/requests/assigned`)\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetRecords(data.requests);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t};\n\n\tconst completeReq = async (values) => {\n\t\ttry {\n\t\t\tsetLoading(true);\n\t\t\tconst { data } = await fetchContext.authAxios.patch(\n\t\t\t\t`/request/complete/${values.id}`,\n\t\t\t\tvalues\n\t\t\t);\n\t\t\tsetSuccessMessage(data.message);\n\t\t\tsetSuccess(true);\n\t\t\tsetErrorMessage('');\n\t\t\tsetLoading(false);\n\t\t} catch (e) {\n\t\t\tconst { data } = e.response;\n\t\t\tsetErrorMessage(data.message);\n\t\t\tsetError(true);\n\t\t\tsetSuccessMessage('');\n\t\t\tsetLoading(false);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tgetAssignedRequests();\n\t\tconst requestChannel = authContext.pusher.subscribe('request');\n\n\t\trequestChannel.bind('created', (newReq) => {\n\t\t\tsetRecords((records) => [...records, newReq]);\n\t\t\tfetchContext.setRefreshKey((fetchContext.refreshKey = +1));\n\t\t});\n\n\t\trequestChannel.bind('updated', (updateReq) => {\n\t\t\tsetRecords(\n\t\t\t\trecords.map((request) =>\n\t\t\t\t\trequest._id === updateReq._id ? { ...records, updateReq } : request\n\t\t\t\t)\n\t\t\t);\n\t\t\tfetchContext.setRefreshKey((fetchContext.refreshKey = +1));\n\t\t});\n\n\t\trequestChannel.bind('deleted-req', (deletedReq) => {\n\t\t\tsetRecords(\n\t\t\t\trecords.filter((req, index) => req._id !== deletedReq[index]._id)\n\t\t\t);\n\t\t\tfetchContext.setRefreshKey(fetchContext.refreshKey + 1);\n\t\t});\n\n\t\treturn () => {\n\t\t\trequestChannel.unbind_all();\n\t\t\trequestChannel.unsubscribe('request');\n\t\t};\n\t}, [fetchContext.refreshKey]);\n\n\treturn (\n\t\t<>\n\t\t\t{successMessage && (\n\t\t\t\t<SnackbarSuccess\n\t\t\t\t\topen={success}\n\t\t\t\t\tsetOpen={setSuccess}\n\t\t\t\t\tsuccessMessage={successMessage}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{errorMessage && (\n\t\t\t\t<SnackbarError\n\t\t\t\t\topen={error}\n\t\t\t\t\tsetOpen={setError}\n\t\t\t\t\terrorMessage={errorMessage}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Box\n\t\t\t\tsx={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\tflexDirection: 'column',\n\t\t\t\t\tgap: 2,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Typography variant=\"h6\" component=\"h2\">\n\t\t\t\t\tRequests\n\t\t\t\t</Typography>\n\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table>\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t{assignedRequest.map((req, index) => (\n\t\t\t\t\t\t\t\t\t<TableCell key={index}>{req.label}</TableCell>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{records.map((record, index) => {\n\t\t\t\t\t\t\t\tconst date = new Date(record?.createdAt);\n\t\t\t\t\t\t\t\tconst month = date.getMonth() + 1;\n\t\t\t\t\t\t\t\tconst day = date.getDate();\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{`${month} - ${day}`}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{record?.ticketNo}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{`${record?.user.firstName} ${record?.user.lastName}`}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{record?.title}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>{record?.reqType}</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t<Box sx={{ display: 'flex', gap: 0.5 }}>\n\t\t\t\t\t\t\t\t\t\t\t\t{record?.completed === true &&\n\t\t\t\t\t\t\t\t\t\t\t\t\trecord?.pending === false && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip label=\"Completed\" color=\"success\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t{record?.pending === true && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Chip label=\"Pending\" color=\"secondary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t\t{record?.pending ? (\n\t\t\t\t\t\t\t\t\t\t\t\t<CustomButton\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"success\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={loading === true}\n\t\t\t\t\t\t\t\t\t\t\t\t\tstartIcon={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tloading === true ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CircularProgress size={20} color=\"primary\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckCircleIcon />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcompleteReq(record);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\tComplete Request\n\t\t\t\t\t\t\t\t\t\t\t\t</CustomButton>\n\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</Box>\n\t\t</>\n\t);\n};\n\nexport default Assigned;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\n\nexports.default = _default;"],"names":["fetchContext","useContext","FetchContext","authContext","AuthContext","useState","records","setRecords","success","setSuccess","error","setError","successMessage","setSuccessMessage","errorMessage","setErrorMessage","loading","setLoading","getAssignedRequests","authAxios","get","then","data","requests","catch","console","log","completeReq","values","patch","id","message","response","useEffect","requestChannel","pusher","subscribe","bind","newReq","setRefreshKey","refreshKey","updateReq","map","request","_id","deletedReq","filter","req","index","unbind_all","unsubscribe","open","setOpen","sx","display","justifyContent","flexDirection","gap","variant","component","Paper","assignedRequest","label","record","date","Date","createdAt","month","getMonth","day","getDate","ticketNo","user","firstName","lastName","title","reqType","completed","pending","color","disabled","startIcon","size","onClick","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}